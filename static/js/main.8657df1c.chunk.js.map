{"version":3,"sources":["components/Header/Header.js","components/MovieCard/Card.js","components/Movies/Movies.js","components/TvshowsNav/TvShowsNav.js","components/Navbar/Nav.js","components/Review/Review.js","components/Reviews/Reviews.js","components/Popup/Popup.js","App.js","index.js"],"names":["Header","setQuery","getByTitle","query","getMovies","className","onClick","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","Card","image","title","rating","overview","setSectionTitle","releaseDate","clickHandler","movieId","src","alt","Movies","route","moviesArray","setMovieId","favoritesArray","sectionTitle","length","map","movie","release_date","id","original_name","poster_path","process","vote_average","TvShowsNav","tvShowsArr","getTvShowsLatest","getTVShows","getAiringToday","getTV","innerHTML","style","width","height","item","Math","random","Nav","sortArr","getNowPlaying","getPopular","getTopRated","displayFavorites","Review","content","avatar","author","Reviews","reviews","checkReviewsHandler","review","author_details","avatar_path","Popup","getById","setClick","tvShowById","addToFavorites","removeFromFavorites","useState","checkReviews","setCheckReviews","handlePopupClose","tagline","genres","genre","name","href","homepage","addFavoritesClose","backdrop_path","App","movies","setMovies","click","tvShowId","setTvShowId","setTvShowById","setGetById","setReviews","favorites","setFavorites","fetch","then","response","json","resp","results","newFavorites","saveToLocalStorage","localStorage","setItem","JSON","stringify","useEffect","getMovieById","getMovieReviews","getTVById","getTvShowReviews","retrievedFavoritesList","parse","getItem","includes","filter","favorite","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8657df1c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nconst Header = ({ setQuery, getByTitle, query, getMovies }) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getByTitle();\r\n    setQuery(\"\");\r\n  };\r\n  const getSearchWord = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 onClick={getMovies}>MoviesApp</h1>\r\n\r\n      <form onSubmit={handleSubmit} type=\"search\">\r\n        <input\r\n          onChange={getSearchWord}\r\n          type=\"text\"\r\n          value={query}\r\n          placeholder=\"Search...\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nconst Card = ({\r\n  image,\r\n  title,\r\n  rating,\r\n  overview,\r\n  setSectionTitle,\r\n  releaseDate,\r\n  clickHandler,\r\n  movieId,\r\n}) => {\r\n  const getClassName = () => {\r\n    if (setSectionTitle !== \"Upcoming\") {\r\n      if (rating >= 8) return \"rating green\";\r\n      if (rating < 8 && rating >= 6) return \"rating orange\";\r\n      if (rating < 6) return \"rating red\";\r\n    } else return \"rating\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-container\">\r\n        <div className=\"card-head\">\r\n          <img\r\n            className=\"card-image\"\r\n            onClick={() => clickHandler(movieId)}\r\n            src={image}\r\n            alt={title}\r\n          />\r\n        </div>\r\n        <div className=\"card-info\">\r\n          <h3>{title}</h3>\r\n          <p className={`${getClassName()}`}>\r\n            {setSectionTitle === \"Upcoming\" ? releaseDate : rating}\r\n          </p>\r\n        </div>\r\n        <div className=\"overview\">\r\n          <p>{overview}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../MovieCard/Card\";\r\nimport \"./Movies.css\";\r\nconst Movies = ({\r\n  moviesArray,\r\n  title,\r\n  clickHandler,\r\n  setMovieId,\r\n  sectionTitle,\r\n  favoritesArray,\r\n}) => {\r\n  let route;\r\n  if (title === \"Favorites\") {\r\n    route = favoritesArray;\r\n  } else {\r\n    route = moviesArray;\r\n  }\r\n  return (\r\n    <div className=\"main\">\r\n      <h1 className=\"title\">{title}</h1>\r\n      <div className=\"movies-container\">\r\n        {route.length > 0 &&\r\n          route.map((movie) => (\r\n            <Card\r\n              setMovieId={setMovieId}\r\n              clickHandler={clickHandler}\r\n              releaseDate={movie.release_date}\r\n              sectionTitle={title}\r\n              key={movie.id}\r\n              movieId={movie.id}\r\n              title={movie.title ? movie.title : movie.original_name}\r\n              image={\r\n                movie.poster_path\r\n                  ? process.env.REACT_APP_IMAGE_API + movie.poster_path\r\n                  : \"https://images.unsplash.com/photo-1572177191856-3cde618dee1f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80\"\r\n              }\r\n              rating={movie.vote_average}\r\n              overview={movie.overview}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst TvShowsNav = ({\r\n  tvShowsArr,\r\n  getTvShowsLatest,\r\n  getTVShows,\r\n  getAiringToday,\r\n}) => {\r\n  const getTV = (e) => {\r\n    if (e.target.innerHTML === \"Top Rated\") getTvShowsLatest();\r\n    if (e.target.innerHTML === \"Popular\") getTVShows();\r\n    if (e.target.innerHTML === \"Airing Today\") getAiringToday();\r\n  };\r\n  return (\r\n    <div className=\"navbar\" style={{ width: \"400px\", height: \"30px\" }}>\r\n      {tvShowsArr.map((item) => (\r\n        <button onClick={getTV} key={Math.random() * 100} className=\"sort-btn\">\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TvShowsNav;\r\n","import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport \"../TvshowsNav/TvShowsNav\";\r\nimport TvShowsNav from \"../TvshowsNav/TvShowsNav\";\r\nconst Nav = ({\r\n  sortArr,\r\n  getNowPlaying,\r\n  getPopular,\r\n  getTopRated,\r\n  getTVShows,\r\n  sectionTitle,\r\n  tvShowsArr,\r\n  getTvShowsLatest,\r\n  getAiringToday,\r\n  displayFavorites,\r\n}) => {\r\n  const getMovies = (e) => {\r\n    if (e.target.innerHTML === \"Now Playing\") getNowPlaying();\r\n    if (e.target.innerHTML === \"Popular\") getPopular();\r\n    if (e.target.innerHTML === \"Top Rated\") getTopRated();\r\n    if (e.target.innerHTML === \"TV Shows\") getTVShows();\r\n    if (e.target.innerHTML === \"Favorites\") displayFavorites();\r\n  };\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"navbar\">\r\n        {sortArr.map((item) => (\r\n          <button\r\n            onClick={getMovies}\r\n            key={Math.random() * 100}\r\n            className=\"sort-btn\"\r\n          >\r\n            {item}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {sectionTitle === \"TV Shows\" ? (\r\n        <TvShowsNav\r\n          tvShowsArr={tvShowsArr}\r\n          getTvShowsLatest={getTvShowsLatest}\r\n          getTVShows={getTVShows}\r\n          getAiringToday={getAiringToday}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./Review.css\";\r\nconst Review = ({ content, avatar, author }) => {\r\n  return (\r\n    <>\r\n      <div className=\"review-body\">\r\n        <div className=\"image-info\">\r\n          <img src={avatar} alt={author} />\r\n          <span>{author}</span>\r\n        </div>\r\n        <p>{content}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\nimport Review from \"../Review/Review\";\r\nimport \"./Reviews.css\";\r\nconst Reviews = ({\r\n  // tvShowId,\r\n  // movieId,\r\n  // sectionTitle,\r\n  reviews,\r\n  image,\r\n  title,\r\n  checkReviewsHandler,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"reviews-container\" onClick={checkReviewsHandler}>\r\n        <div className=\"review\">\r\n          <h1>{title}</h1>\r\n          <img src={image} alt={title} />\r\n        </div>\r\n        {reviews.length > 0 &&\r\n          reviews.map((review) => (\r\n            <Review\r\n              key={review.id}\r\n              content={review.content}\r\n              author={review.author}\r\n              avatar={\r\n                review.author_details.avatar_path\r\n                  ? process.env.REACT_APP_IMAGE_API +\r\n                    review.author_details.avatar_path\r\n                  : \"https://images.unsplash.com/photo-1572177191856-3cde618dee1f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80\"\r\n              }\r\n            />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { useState } from \"react\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport \"./Popup.css\";\r\nconst Popup = ({\r\n  getById,\r\n  setClick,\r\n  sectionTitle,\r\n  tvShowById,\r\n  reviews,\r\n  addToFavorites,\r\n  removeFromFavorites,\r\n}) => {\r\n  const [checkReviews, setCheckReviews] = useState(false);\r\n  const handlePopupClose = (route) => {\r\n    setClick(false);\r\n    removeFromFavorites(route);\r\n  };\r\n  const checkReviewsHandler = () => {\r\n    setCheckReviews(!checkReviews);\r\n  };\r\n  const addFavoritesClose = (route) => {\r\n    setClick(false);\r\n    addToFavorites(route);\r\n  };\r\n  ////TV SHOWS IDs ARE THE SAME WITH MOVIES IDs SO I AM SETTING THE ROUTE ACORDINGLY IN CASE WE'RE LOOKING EITHER FOR MOVIES OR TV SHOWS\r\n  let route;\r\n  if (sectionTitle === \"TV Shows\") {\r\n    route = tvShowById;\r\n  } else {\r\n    route = getById;\r\n  }\r\n  return (\r\n    <div className=\"popup\">\r\n      <div onClick={handlePopupClose} className=\"close\">\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"info-container\">\r\n        <img\r\n          className=\"popup-image\"\r\n          src={\r\n            route.poster_path\r\n              ? process.env.REACT_APP_IMAGE_API + route.poster_path\r\n              : \"https://images.unsplash.com/photo-1572177191856-3cde618dee1f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80\"\r\n          }\r\n          alt={route.title}\r\n        />\r\n        <div className=\"info-text\">\r\n          <div className=\"title-info\">\r\n            <h1>{route.title ? route.title : route.original_name}</h1>\r\n            <h3>{route.tagline}</h3>\r\n          </div>\r\n          <div className=\"genres\">\r\n            {route.genres\r\n              ? route.genres.map((genre) => <p key={genre.id}>{genre.name}</p>)\r\n              : null}\r\n          </div>\r\n          <p>{route.release_date}</p>\r\n          <p className=\"overview\">{route.overview}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"cta\">\r\n        <a className=\"homepage\" href={route.homepage} target=\"_blank\">\r\n          Click here to watch\r\n        </a>\r\n        {sectionTitle !== \"Favorites\" ? (\r\n          <button onClick={() => addFavoritesClose(route)}>\r\n            Add to favorites\r\n          </button>\r\n        ) : (\r\n          <button onClick={() => handlePopupClose(route)}>Remove</button>\r\n        )}\r\n        <button onClick={checkReviewsHandler}>Reviews</button>\r\n        {checkReviews ? (\r\n          <Reviews\r\n            checkReviewsHandler={checkReviewsHandler}\r\n            sectionTitle={sectionTitle}\r\n            reviews={reviews}\r\n            image={\r\n              route.backdrop_path\r\n                ? process.env.REACT_APP_IMAGE_API + route.backdrop_path\r\n                : \"https://images.unsplash.com/photo-1572177191856-3cde618dee1f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80\"\r\n            }\r\n            title={route.title ? route.title : route.original_name}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Movies, Header, Nav, Popup } from \"./components/index\";\r\nconst App = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const sortArr = [\r\n    \"Now Playing\",\r\n    \"Popular\",\r\n    \"Top Rated\",\r\n    \"TV Shows\",\r\n    \"Favorites\",\r\n  ];\r\n  const tvShowsArr = [\"Popular\", \"Top Rated\", \"Airing Today\"];\r\n  const [sectionTitle, setSectionTitle] = useState(\"Movies\");\r\n  const [click, setClick] = useState(false);\r\n  const [movieId, setMovieId] = useState(464052);\r\n  const [tvShowId, setTvShowId] = useState(85271);\r\n  const [tvShowById, setTvShowById] = useState([]);\r\n  const [getById, setGetById] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n  ///GET MOVIES LIST\r\n  const getMovies = () => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&page=1`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setMovies(resp.results);\r\n        return resp;\r\n      });\r\n  };\r\n  ///SEARCH BY TITLE\r\n  const getByTitle = () => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=${query}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setSectionTitle(\"Search results\");\r\n        setMovies(resp.results);\r\n      });\r\n  };\r\n\r\n  ///GET NOW PLAYING CATEGORY\r\n  const getNowPlaying = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setSectionTitle(\"Now Playing\");\r\n        setMovies(resp.results);\r\n      });\r\n  };\r\n\r\n  ///GET POPULAR CATEGORY\r\n  const getPopular = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setSectionTitle(\"Popular\");\r\n        setMovies(resp.results);\r\n      });\r\n  };\r\n\r\n  ///GET TOP RATED CATEGORY\r\n  const getTopRated = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setSectionTitle(\"Top Rated\");\r\n        setMovies(resp.results);\r\n      });\r\n  };\r\n\r\n  //?GET TV SHOWS\r\n  const getTVShows = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/on_the_air?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setSectionTitle(\"TV Shows\");\r\n        setMovies(resp.results);\r\n      });\r\n  };\r\n\r\n  //?GET LASTEST TV SHOWS\r\n  const getTvShowsLatest = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/top_rated?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setSectionTitle(\"TV Shows\");\r\n        setMovies(resp.results);\r\n      });\r\n  };\r\n  ///GET AIRING TODAY TV SHOWS\r\n  const getAiringToday = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/airing_today?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setSectionTitle(\"TV Shows\");\r\n        setMovies(resp.results);\r\n      });\r\n  };\r\n\r\n  ///HANDLE CLICK AND SET IDs IN ORDER FOR THE POPUP TO LOOK CORECTLY FOR DATA TO DISPLAY\r\n  const clickHandler = (item) => {\r\n    setClick(!click);\r\n    sectionTitle !== \"TV Shows\" ? setMovieId(item) : setTvShowId(item);\r\n  };\r\n\r\n  ////GET MOVIE BY ID\r\n  const getMovieById = (movieId) => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setGetById(resp);\r\n      });\r\n  };\r\n\r\n  //GET TV SHOW BY ID\r\n  const getTVById = (tvShowId) => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/${tvShowId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setTvShowById(resp);\r\n      });\r\n  };\r\n  //////GET REVIEWS\r\n  ///////////REVIEW BY MOVIE ID\r\n  const getMovieReviews = (movieId) => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&page=1`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => setReviews(resp.results));\r\n  };\r\n  const getTvShowReviews = (tvShowId) => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/${tvShowId}/reviews?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&page=1`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resp) => setReviews(resp.results));\r\n  };\r\n  ////////Add favorites\r\n  let newFavorites = [...favorites];\r\n  const addToFavorites = (item) => {\r\n    if (!newFavorites.includes(item)) newFavorites = [...newFavorites, item];\r\n    setFavorites(newFavorites);\r\n    saveToLocalStorage(newFavorites);\r\n  };\r\n  const removeFromFavorites = (item) => {\r\n    const newFavorites = favorites.filter(\r\n      (favorite) => favorite.id !== item.id\r\n    );\r\n    setFavorites(newFavorites);\r\n    saveToLocalStorage(newFavorites);\r\n  };\r\n  ////DISPLAY FAVORITES\r\n  const displayFavorites = () => {\r\n    setSectionTitle(\"Favorites\");\r\n  };\r\n  ////SAVE TO LOCAL STORAGE\r\n  const saveToLocalStorage = (item) => {\r\n    localStorage.setItem(\"favorites\", JSON.stringify(item));\r\n  };\r\n  ///GET MOVIES ON COMPONENT MOUNT\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n  // /GET MOVIE BY ID\r\n  useEffect(() => {\r\n    getMovieById(movieId);\r\n    //////REVIEWS\r\n    getMovieReviews(movieId);\r\n  }, [movieId]);\r\n\r\n  ////GET TVSHOWBY ID\r\n  useEffect(() => {\r\n    getTVById(tvShowId);\r\n    ////GET REVIEWs\r\n    getTvShowReviews(tvShowId);\r\n  }, [tvShowId]);\r\n  /////RETRIEVE FAVOURITES LIST FROM LOCAL STORAGE\r\n  useEffect(() => {\r\n    const retrievedFavoritesList = JSON.parse(\r\n      localStorage.getItem(\"favorites\")\r\n    );\r\n    setFavorites(retrievedFavoritesList);\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        getMovies={getMovies}\r\n        setQuery={setQuery}\r\n        getByTitle={getByTitle}\r\n        query={query}\r\n      />\r\n      <Nav\r\n        sortArr={sortArr}\r\n        getNowPlaying={getNowPlaying}\r\n        getPopular={getPopular}\r\n        getTopRated={getTopRated}\r\n        getTVShows={getTVShows}\r\n        sectionTitle={sectionTitle}\r\n        tvShowsArr={tvShowsArr}\r\n        getTvShowsLatest={getTvShowsLatest}\r\n        getAiringToday={getAiringToday}\r\n        displayFavorites={displayFavorites}\r\n      />\r\n      <Movies\r\n        favoritesArray={favorites}\r\n        moviesArray={movies}\r\n        title={sectionTitle}\r\n        clickHandler={clickHandler}\r\n        setMovieId={setMovieId}\r\n        sectionTitle={setSectionTitle}\r\n      />\r\n      {click ? (\r\n        <Popup\r\n          setClick={setClick}\r\n          getById={getById}\r\n          click={click}\r\n          sectionTitle={sectionTitle}\r\n          tvShowById={tvShowById}\r\n          reviews={reviews}\r\n          addToFavorites={addToFavorites}\r\n          removeFromFavorites={removeFromFavorites}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}